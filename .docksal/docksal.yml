services:
  cli:
    environment:
      - SIMPLETEST_BASE_URL=http://web/
      - BROWSERTEST_OUTPUT_BASE_URL=http://${VIRTUAL_HOST}
      - SIMPLETEST_DB=pgsql://user:user@db/par
      - COMPOSER_DEFAULT_VERSION
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD
      - REDIS_SCHEME
      - OPENSEARCH_HOSTNAME
      - VCAP_SERVICES
      - APP_ENV
      - PAR_HASH_SALT
      # - DATABASE_CREDENTIALS
      # - REDIS_ENDPOINT
      # - OPENSEARCH_ENDPOINT
      # To get cron to work these environment need the SECRET_ prefix.
      - SECRET_OPENSEARCH_INITIAL_ADMIN_PASSWORD=$OPENSEARCH_INITIAL_ADMIN_PASSWORD
      - SECRET_POSTGRES_HOST=$POSTGRES_HOST
      - SECRET_POSTGRES_PORT=$POSTGRES_PORT
      - SECRET_POSTGRES_DB=$POSTGRES_DB
      - SECRET_POSTGRES_USER=$POSTGRES_USER
      - SECRET_POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - SECRET_VIRTUAL_HOST=$VIRTUAL_HOST
      - SECRET_VCAP_SERVICES=$VCAP_SERVICES
      - SECRET_REDIS_SCHEME=$REDIS_SCHEME
      - SECRET_OPENSEARCH_HOSTNAME=$OPENSEARCH_HOSTNAME
      - SECRET_WEB_KEEPALIVE=0
      - SECRET_APP_ENV=$APP_ENV
      - SECRET_PAR_HASH_SALT=$PAR_HASH_SALT
      # - SECRET_DATABASE_CREDENTIALS=$DATABASE_CREDENTIALS
      # - SECRET_REDIS_ENDPOINT=$REDIS_ENDPOINT
      # - SECRET_OPENSEARCH_ENDPOINT=$OPENSEARCH_ENDPOINT

  web:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: nginx
    logging:
      options:
        max-file: "1"

  db:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: pgsql

  opensearch:
    image: ${OPENSEARCH_IMAGE:-opensearchproject/opensearch:1.2.4}
    hostname: ${OPENSEARCH_HOSTNAME}
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    environment:
      - cluster.name=opensearch-cluster
      - node.name=${OPENSEARCH_HOSTNAME}
      - discovery.seed_hosts=${OPENSEARCH_HOSTNAME}
      - cluster.initial_master_nodes=${OPENSEARCH_HOSTNAME}
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - DISABLE_INSTALL_DEMO_CONFIG=true # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
      - DISABLE_SECURITY_PLUGIN=true # disables security plugin entirely in OpenSearch by setting plugins.security.disabled: true in opensearch.yml
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=$OPENSEARCH_INITIAL_ADMIN_PASSWORD # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536

  opensearch-dashboard:
    image: ${OPENSEARCH_DASHBOARDS_IMAGE:-opensearchproject/opensearch-dashboards:1.2.0}
    hostname: opensearch_dashboard
    environment:
      - OPENSEARCH_HOSTS=["http://${OPENSEARCH_HOSTNAME}:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true # disables security dashboards plugin in OpenSearch Dashboards
    labels:
      - io.docksal.virtual-host=dashboard.opensearch.${VIRTUAL_HOST},dashboard.opensearch.${VIRTUAL_HOST}.*
      - io.docksal.virtual-port=${OPENSEARCH_DASHBOARD_PORT_MAPPING:-5601}
      - io.docksal.cert-name=${VIRTUAL_HOST_CERT_NAME:-none}

  clamav:
    hostname: clamav
    image: ${CLAMAV_IMAGE:-clamav/clamav:latest}

  mail:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: mail
    labels:
      - io.docksal.virtual-host=webmail.${VIRTUAL_HOST}

  redis:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: redis
    volumes:
      - ${PROJECT_ROOT}/.docksal/etc/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  selenium_sa_chrome:
    hostname: selenium-sa-chrome
    image: ${STANDALONE_CHROME_IMAGE:-selenium/standalone-chrome:135.0}
    shm_size: 2gb
    environment:
      - VIRTUAL_HOST=web
      - HTTPS_EXPOSE=7900:7900
      - SCREEN_WIDTH=1600
      - SCREEN_HEIGHT=1200
      - SE_ENABLE_TRACING=false
      - SE_VNC_NO_PASSWORD=1
      - SE_NODE_HOST=selenium-sa-chrome
      - SE_LOG_LEVEL=FINEST
    ports:
      - "0:4444"
      - "0:7900"
    labels:
      io.docksal.virtual-host: selenium-sa-chrome.${VIRTUAL_HOST}
      io.docksal.virtual-port: "7900"

  maven:
    image: ${COMPOSE_PROJECT_NAME_SAFE}_maven
    build:
      context: services/maven
      dockerfile: Dockerfile
      args:
        - MAVEN_IMAGE=${MAVEN_IMAGE:-maven:3.9.9-eclipse-temurin-17}
    environment:
      - VIRTUAL_HOST=web
      - env=${ENV:-docksal}
    volumes:
      - ${PROJECT_ROOT}/.docksal/services/maven/pom.xml:/pom.xml
      - ${PROJECT_ROOT}/.docksal/services/maven/resources:/resources
      - ${PROJECT_ROOT}/tests/e2e/par-test-automation/memberslist.csv:/memberslist.csv
      - ${PROJECT_ROOT}/tests/e2e/par-test-automation/link.txt:/link.txt
      - ${PROJECT_ROOT}/tests/e2e/par-test-automation:/app
    command:
      - "mvn"
      - "-batch-mode"
      - "-f"
      - "/pom.xml"
      - "clean"
      - "test"
    restart: "no"
    depends_on:
      - web
    logging:
      options:
        max-file: "1"

  zap:
    image: ${ZAP_IMAGE:-zaproxy/zap-stable}
    hostname: zap
    volumes:
      - ${PROJECT_ROOT}/zap:/zap/wrk/:rw
    command:
      - "zap-baseline.py"
      - "-t"
      - "http://web"
      - "-r"
      - "/zap/wrk/report/zap_report.html"
      - "-g"
      - "/zap/wrk/report/zap_report.config.txt"
    restart: "no"
    depends_on:
      - web
    logging:
      options:
        max-file: "1"

volumes:
  opensearch-data1:
    driver: local
