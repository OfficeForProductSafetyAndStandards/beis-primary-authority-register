<?php

/**
 * @file
 * Contains par_roles.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Access\AccessResult;

/**
 * Implements hook_help().
 */
function par_roles_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the par_roles module.
    case 'help.page.par_roles':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Defines roles for PAR Users and allowing them to perform the necessary actions based on their roles.') . '</p>';
      return $output;

    default:
  }
}

function par_roles_user_presave($account) {
  $par_data_manager = \Drupal::service('par_data.manager');

  // Do not run this check for test accounts.
  if (preg_match('/@example.com$/', $account->getEmail()) === 1) {
    return;
  }

  // Check whether they are the last user with a given role in any of their authorities.
  $authority_member = $par_data_manager->isMemberOfAuthority($account);

  // Add the relevant authority role if they are an authority member.
  if ($authority_member) {
    $secondary_user = $par_data_manager->isRoleInAllMemberAuthorities($account, ['par_authority']);

    // If there are no other primary authority users in any of the member's
    // authorities then assign them the primary authority role.
    if (!$secondary_user) {
      $account->addRole('par_authority');
      $account->removeRole('par_enforcement');
    }
    elseif ((!$account->hasRole('par_authority') && !$account->hasRole('par_enforcement'))) {
      $account->addRole('par_enforcement');
      $account->removeRole('par_authority');
    }
  }
  else {
    $account->removeRole('par_authority');
    $account->removeRole('par_enforcement');
  }

  $organisation_member = $par_data_manager->isMemberOfOrganisation($account);
  if ($organisation_member) {
    $account->addRole('par_organisation');
  }
  elseif (!$organisation_member) {
    $account->removeRole('par_organisation');
  }
}

function par_roles_user_insert($account) {
  // Do not run this check for test accounts.
  if (preg_match('/@example.com$/', $account->getEmail()) === 1) {
    return;
  }

  $par_data_manager = \Drupal::service('par_data.manager');
  $par_data_manager->linkPeople($account);
}

function par_roles_user_update($account) {
  // Do not run this check for test accounts.
  if (preg_match('/@example.com$/', $account->getEmail()) === 1) {
    return;
  }

  $par_data_manager = \Drupal::service('par_data.manager');
  $par_data_manager->linkPeople($account);
}

/**
 * Add a permission to allow other users to see user fields such as last login time.
 *
 * Added in PAR-1624 to allow last login time to be displayed in the /members view.
 * https://www.drupal.org/project/drupal/issues/2799049
 *
 * @see \hook_entity_field_access()
 *
 * {@inheritDoc}
 */
function par_roles_entity_field_access($operation, \Drupal\Core\Field\FieldDefinitionInterface $field_definition, \Drupal\Core\Session\AccountInterface $account, \Drupal\Core\Field\FieldItemListInterface $items = NULL) {
  if ($operation === 'view' && $field_definition->getTargetEntityTypeId() === 'user') {
    return AccessResult::allowedIfHasPermission($account, 'view user fields');
  }

  return AccessResult::neutral();
}
