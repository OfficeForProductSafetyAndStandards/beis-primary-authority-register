<?php

/**
 * @file
 * Contains par_roles.module.
 */
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\par_data\Entity\ParDataPerson;

/**
 * Implements hook_help().
 */
function par_roles_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the par_roles module.
    case 'help.page.par_roles':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Defines roles for PAR Users and allowing them to perform the necessary actions based on their roles.') . '</p>';
      return $output;

    default:
  }
}

function par_roles_user_presave($account) {
  /** @var \Drupal\par_roles\ParRoleManagerInterface $par_role_manager */
  $par_role_manager = \Drupal::service('par_roles.role_manager');
  // Auto-assign the correct roles based on memberships.
  $account = $par_role_manager->autoAssignRoles($account);

  if (!$par_role_manager->hasPeople($account)) {
    // Create a person record that contains the bare minimum information.
    // This ensures there is always a contact record for each user to complete.
    $person = ParDataPerson::create([
      'email' => $account->getEmail(),
      'field_user_account' => [$account->id()],
    ]);
    $person->save();
  }
}

function par_roles_user_insert($account) {
  // Do not run this check for test accounts.
  if (preg_match('/@example.com$/', (string) $account->getEmail()) === 1) {
    return;
  }

  $par_data_manager = \Drupal::service('par_data.manager');
  $par_data_manager->linkPeople($account);
}

function par_roles_user_update($account) {
  // Do not run this check for test accounts.
  if (preg_match('/@example.com$/', (string) $account->getEmail()) === 1) {
    return;
  }

  $par_data_manager = \Drupal::service('par_data.manager');
  $par_data_manager->linkPeople($account);
}

/**
 * Add a permission to allow other users to see user fields such as last login time.
 *
 * Added in PAR-1624 to allow last login time to be displayed in the /members view.
 * https://www.drupal.org/project/drupal/issues/2799049
 *
 * @see \hook_entity_field_access()
 *
 * {@inheritDoc}
 */
function par_roles_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {
  if ($operation === 'view' && $field_definition->getTargetEntityTypeId() === 'user') {
    return AccessResult::allowedIfHasPermission($account, 'view user fields');
  }

  return AccessResult::neutral();
}
