<?php

/**
 * @file
 * Contains par_roles.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function par_roles_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the par_roles module.
    case 'help.page.par_roles':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Defines roles for PAR Users and allowing them to perform the necessary actions based on their roles.') . '</p>';
      return $output;

    default:
  }
}

function par_roles_user_presave($account) {
  $par_data_manager = \Drupal::service('par_data.manager');

  // Check whether they are the last user with a given role in any of their authorities.
  $authority_member = $par_data_manager->isMemberOfAuthority($account);

  // Add the relevant authority role if they are an authority member.
  if ($authority_member) {
    $other_authority_members = $par_data_manager->isRoleInAllMemberAuthorities($account, ['par_authority']);
    // If there are no other par_authority members the default role is par_authority.
    $new_authority_role = !$other_authority_members ? 'par_authority' : 'par_enforcement';

    if (!$account->hasRole('par_authority') && !$account->hasRole('par_enforcement')) {
      $account->addRole($new_authority_role);
    }
  }
  elseif ($account->hasRole('par_authority')) {
    $account->removeRole('par_authority');
    $account->removeRole('par_enforcement');
  }

  $organisation_member = $par_data_manager->isMemberOfOrganisation($account);
  if ($organisation_member && !$account->hasRole('par_organisation')) {
    $account->addRole('par_organisation');
  }
  elseif (!$organisation_member && $account->hasRole('par_organisation')) {
    $account->removeRole('par_organisation');
  }
}

function par_roles_user_insert($account) {
  $par_data_manager = \Drupal::service('par_data.manager');
  $par_data_manager->linkPeople($account);
}

function par_roles_user_update($account) {
  $par_data_manager = \Drupal::service('par_data.manager');
  $par_data_manager->linkPeople($account);
}
