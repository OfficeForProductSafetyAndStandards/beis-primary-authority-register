<?php
/**
 * @file
 * Installation hooks for par_data_test module.
 */

/**
 * Implements hook_uninstall().
 */
function par_data_test_uninstall() {
  // Delete all the entities when we uninstall.
  // Must be removed before we do the final migration.
  // This should just be used for testing while we
  // have no other content in the database.
  $par_data_manager = \Drupal::service('par_data.manager');
  $serializer = \Drupal::service('serializer');

  $module_folder = \Drupal::moduleHandler()
      ->getModule('par_data_test')
      ->getPath() . '/content';
  $entity_folders = array_filter(scandir($module_folder), function($item) {
    return $item[0] !== '.';
  });

  // Locate all test data uuids.
  $uuids = [];
  $uname = [];
  foreach ($entity_folders as $directory) {
    $entity_uuids = array_filter(scandir($module_folder . '/' . $directory), function($item) {
      return $item[0] !== '.';
    });


    $uuids[$directory] = [];
    $uname[$directory] = [];
    foreach ($entity_uuids as $file_name) {
      $uuid = rtrim($file_name, '.json');

      $uuids[$directory][] = $uuid;

      $file_path = "$module_folder/$directory/$file_name";
      $contents = file_get_contents($file_path);
      $decoded = $serializer->decode($contents, 'hal_json');

      if (isset($decoded['name'][0]['value'])) {
        $uname[$directory][] = $decoded['name'][0]['value'];
      }
    }
  }

  // Permanently delete all entities.
  foreach ($uuids as $entity_type => $uuids) {
    $storage = \Drupal::entityTypeManager()->getStorage($entity_type);
    $entities = [];
    foreach ($uuids as $uuid) {
      $entities += !empty($uuid) ? $storage->loadByProperties(['uuid' => $uuid]) : [];
    }

    foreach ($entities as $e) {
      if ($e instanceof \Drupal\par_data\Entity\ParDataEntityInterface) {
        // We need to bypass all checks and permanently remove this item.
        $e->annihilate();
      }
      else {
        $e->delete();
      }
    }
  }

  // Also remove any duplicate entities with the same name.
  foreach ($uname as $entity_type => $names) {
    $storage = \Drupal::entityTypeManager()->getStorage($entity_type);
    $entities = [];
    foreach ($names as $name) {
      $entities += !empty($uuid) ? $storage->loadByProperties(['name' => $name]) : [];
    }

    foreach ($entities as $e) {
      if ($e instanceof \Drupal\par_data\Entity\ParDataEntityInterface) {
        // We need to bypass all checks and permanently remove this item.
        $e->annihilate();
      }
      else {
        $e->delete();
      }
    }
  }
}
