<?php

/**
 * @file
 * Contains par_data_test.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_help().
 */
function par_data_test_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the par_data_test module.
    case 'help.page.par_data_test':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Test data for the PAR Data model') . '</p>';
      return $output;

    default:
  }
}

function par_data_test_create_entities() {

  // First let's create a few test users.
  $authority_user = User::create([
    'name' => 'par_authority@example.com',
    'pass' => 'TestPassword',
    'mail' => 'par_authority@example.com',
    'status' => 1,
    'roles' => ['par_authority'],
  ]);
  $authority_user->save();
  $coordinator_user = User::create([
    'name' => 'par_coordinator@example.com',
    'pass' => 'TestPassword',
    'mail' => 'par_coordinator@example.com',
    'status' => 1,
    'roles' => ['par_coordinator'],
  ]);
  $coordinator_user->save();
  $business_user = User::create([
    'name' => 'par_business@example.com',
    'pass' => 'TestPassword',
    'mail' => 'par_business@example.com',
    'status' => 1,
    'roles' => ['par_business'],
  ]);
  $business_user->save();
  $helpdesk_user = User::create([
    'name' => 'par_helpdesk@example.com',
    'pass' => 'TestPassword',
    'mail' => 'par_helpdesk@example.com',
    'status' => 1,
    'roles' => ['par_helpdesk'],
  ]);
  $helpdesk_user->save();

  // Create documents and images for use by any test data.
  $path = DRUPAL_ROOT . '/' . Drupal::service('module_handler')
    ->getModule('par_data_test')->getPath() . '/assets/';
  $files = scandir($path);
  if (!$files) {
    $files = [];
  }
  // There are 6 $uploaded_files, 2 images and 4 pdf
  // documents, which can be used in any of the
  // entities below as required.
  $uploaded_files = [];
  foreach($files as $filename) {
    $directory = 'private://par-data-test/';
    if (file_prepare_directory($directory, FILE_CREATE_DIRECTORY) && is_file($path . $filename)) {
      $handle = fopen($path . $filename, 'r');
      $uploaded_files[] = file_save_data($handle, $directory . basename($filename));
      fclose($handle);
    }
  }

  // Create Advice.
  $advice_1 = \Drupal\par_data\Entity\ParDataAdvice::create([
    'type' => 'advice',
    'name' => 'Just one cookie please',
    'uid' => 1,
    'advice_type' => 'background_information',
    'notes' => 'Cookie Monster Is The Life Coach You Never Knew You Needed. See http://bzfd.it/2tD0DlO for more information.',
    'visible_authority' => TRUE,
    'visible_coordinator' => TRUE,
    'visible_business' => TRUE,
  ]);
  $advice_1->save();

  // Create an Inspection Plan.
  $inspection_plan_1 = \Drupal\par_data\Entity\ParDataInspectionPlan::create([
    'type' => 'inspection_plan',
    'name' => 'Cookie inspection',
    'uid' => 1,
    'valid_date' => [
      'value' => '2016-01-01',
      'end_value' => '2018-01-01',
    ],
    'approved_rd_executive' => TRUE,
    'consulted_national_regulator' => TRUE,
    'inspection_status' => 'Cookies found',
  ]);
  $inspection_plan_1->save();

  // Create a Legal Entity.
  $legal_entity_1 = \Drupal\par_data\Entity\ParDataLegalEntity::create([
    'type' => 'legal_entity',
    'name' => 'ABCD Mart',
    'uid' => 1,
    'registered_name' => 'ABCD Mart',
    'registered_number' => '0123456789',
    'legal_entity_type' => 'Fictional Company',
  ]);
  $legal_entity_1->save();

  // Create a Legal Entity.
  $legal_entity_2 = \Drupal\par_data\Entity\ParDataLegalEntity::create([
    'type' => 'legal_entity',
    'name' => 'Charlie\'s Cafe',
    'uid' => 1,
    'registered_name' => 'Charlie\'s Cafe',
    'registered_number' => '0123456789',
    'legal_entity_type' => 'Fictional Company',
  ]);
  $legal_entity_2->save();

  // Create Premises.
  $premises_1 = \Drupal\par_data\Entity\ParDataPremises::create([
    'type' => 'premises',
    'name' => '1 sesame St',
    'uid' => 1,
    'address' => [
      'country_code' => 'GB',
      'address_line1' => '1 sesame St',
      'address_line2' => 'New York',
      'locality' => 'New York State',
      'administrative_area' => 'US-NY',
      'postal_code' => '12345',
    ],
  ]);
  $premises_1->save();

  // Create Premises.
  $premises_2 = \Drupal\par_data\Entity\ParDataPremises::create([
    'type' => 'premises',
    'name' => '2 sesame St',
    'uid' => 1,
    'address' => [
      'country_code' => 'GB',
      'address_line1' => '2 sesame St',
      'address_line2' => 'New York',
      'locality' => 'New York State',
      'administrative_area' => 'US-NY',
      'postal_code' => '12345',
    ],
  ]);
  $premises_2->save();

  // Create Premises.
  $premises_3 = \Drupal\par_data\Entity\ParDataPremises::create([
    'type' => 'premises',
    'name' => '3 sesame St',
    'uid' => 1,
    'address' => [
      'country_code' => 'GB',
      'address_line1' => '3 sesame St',
      'address_line2' => 'New York',
      'locality' => 'New York State',
      'administrative_area' => 'US-NY',
      'postal_code' => '12345',
    ],
  ]);
  $premises_3->save();

  // Create Premises.
  $premises_4 = \Drupal\par_data\Entity\ParDataPremises::create([
    'type' => 'premises',
    'name' => '4 sesame St',
    'uid' => 1,
    'address' => [
      'country_code' => 'GB',
      'address_line1' => '4 sesame St',
      'address_line2' => 'New York',
      'locality' => 'New York State',
      'administrative_area' => 'US-NY',
      'postal_code' => '12345',
    ],
  ]);
  $premises_4->save();

  // Create people entities.
  $authority_person_1 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Big Bird',
    'uid' => 1,
    'salutation' => 'Mrs',
    'first_name' => 'Big',
    'last_name' => 'Bird',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_authority@example.com',
    'role' => 'CTO'
  ]);
  $authority_person_1->save();
  $authority_person_2 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Kermit',
    'uid' => 1,
    'salutation' => 'Mr',
    'first_name' => 'Kermit',
    'last_name' => 'the Frog',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_authority@example.com'
  ]);
  $authority_person_2->save();
  $business_person_3 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Snuffleupagus',
    'uid' => 1,
    'salutation' => 'Mr',
    'first_name' => 'Snuffleupagus',
    'last_name' => 'Muppet',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_business@example.com'
  ]);
  $business_person_3->save();
  $business_person_4 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Elmo',
    'uid' => 1,
    'salutation' => 'Mrs',
    'first_name' => 'Elmo',
    'last_name' => 'Muppet',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_business@example.com'
  ]);
  $business_person_4->save();

  // Create people entities.
  $coordinator_person_5 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Ernie',
    'uid' => 1,
    'salutation' => 'Mr',
    'first_name' => 'Ernie',
    'last_name' => 'Muppet',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_coordinator@example.com'
  ]);
  $coordinator_person_5->save();
  $coordinator_person_6 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Bert',
    'uid' => 1,
    'salutation' => 'Mr',
    'first_name' => 'Bert',
    'last_name' => 'Muppet',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_coordinator@example.com'
  ]);
  $coordinator_person_6->save();
  $business_person_7 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Oscar the Grouch',
    'uid' => 1,
    'salutation' => 'Mr',
    'first_name' => 'Oscar',
    'last_name' => 'the Grouch',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_coordinator@example.com'
  ]);
  $business_person_7->save();
  $authority_person_8 = \Drupal\par_data\Entity\ParDataPerson::create([
    'type' => 'person',
    'name' => 'Grover',
    'uid' => 1,
    'salutation' => 'Dr',
    'first_name' => 'Grover',
    'last_name' => 'Muppet',
    'work_phone' => '01723456789',
    'mobile_phone' => '0777777777',
    'email' => 'par_authority@example.com'
  ]);
  $authority_person_8->save();

  // Create some SIC Codes.
  $sic_code_1 = \Drupal\par_data\Entity\ParDataSicCode::create([
    'type' => 'sic_code',
    'name' => 'Biscuit sales',
    'uid' => 1,
    'sic_code' => '111111',
    'description' => 'This SIC Code should be used if you sell cookies.'
  ]);
  $sic_code_1->save();

  // Create some SIC Codes.
  $sic_code_2 = \Drupal\par_data\Entity\ParDataSicCode::create([
    'type' => 'sic_code',
    'name' => 'Eating of biscuits',
    'uid' => 1,
    'sic_code' => '111111',
    'description' => 'This SIC Code should be used if you allow people to eat cookies on your premises.'
  ]);
  $sic_code_2->save();

  // Create two organisations.
  $organisation_1 = \Drupal\par_data\Entity\ParDataOrganisation::create([
    'type' => 'business',
    'name' => 'ABCD Mart',
    'uid' => 1,
    'organisation_name' => 'ABCD Mart',
    'size' => 'Enormous',
    'employees_band' => '10-50',
    'nation' => 'USA',
    'comments' => 'ABCD Mart is a department store featured in the Sesame Street direct-to-video special Big Bird Gets Lost.',
    'premises_mapped' => TRUE,
    'trading_name' => [
      'ABCD',
      'ABCD Mart',
    ],
    'field_person' => [
      $business_person_3->id(),
      $business_person_4->id(),
    ],
    'field_premises' => [
      $premises_1->id(),
    ],
    'field_legal_entity' => [
      $legal_entity_1->id()
    ],
    'field_sic_code' => [
      $sic_code_1->save(),
    ]
  ]);
  $organisation_1->save();

  // Create three organisations.
  $organisation_2 = \Drupal\par_data\Entity\ParDataOrganisation::create([
    'type' => 'business',
    'name' => 'Charlie\'s Cafe',
    'uid' => 1,
    'organisation_name' => 'Charlie\'s',
    'size' => 'Small',
    'employees_band' => '5-10',
    'nation' => 'USA',
    'comments' => 'Charlie\'s is a restaurant featured in a series of Sesame Street sketches involving Grover working as a waiter at the restaurant.',
    'premises_mapped' => TRUE,
    'trading_name' => [
      'Charlie\'s',
      'Charlie\'s Cafe',
    ],
    'field_person' => [
      $business_person_7->id(),
      $business_person_4->id(),
    ],
    'field_premises' => [
      $premises_2->id(),
    ],
    'field_legal_entity' => [
      $legal_entity_1->id()
    ],
    'field_sic_code' => [
      $sic_code_2->save(),
    ]
  ]);
  $organisation_2->save();

  // Create Regulatory Area.
  $regulatory_function_1 = \Drupal\par_data\Entity\ParDataRegulatoryFunction::create([
    'type' => 'regulatory_function',
    'name' => 'Cookie control',
    'uid' => 1,
    'function_name' => 'Cookie control',
  ]);
  $regulatory_function_1->save();

  // Create Regulatory Area.
  $regulatory_function_2 = \Drupal\par_data\Entity\ParDataRegulatoryFunction::create([
    'type' => 'regulatory_function',
    'name' => 'Alphabet learning',
    'uid' => 1,
    'function_name' => 'Alphabet learning',
  ]);
  $regulatory_function_2->save();

  // Create two authorities.
  $authority_1 = \Drupal\par_data\Entity\ParDataAuthority::create([
    'type' => 'authority',
    'name' => 'Lower East Side',
    'uid' => 1,
    'authority_name' => 'Lower East Side Borough Council',
    'authority_type' => 'Local Authority',
    'nation' => 'USA',
    'ons_code' => '123456',
    'field_person' => [
      $authority_person_1->id(),
      $authority_person_2->id(),
    ],
    'field_regulatory_function' => [
      $regulatory_function_1->id(),
    ],
    'field_premises' => [
      $premises_3->id(),
    ],
  ]);
  $authority_1->save();
  $authority_2 = \Drupal\par_data\Entity\ParDataAuthority::create([
    'type' => 'authority',
    'name' => 'Upper West Authority',
    'uid' => 1,
    'authority_name' => 'Upper West Side Borough Council',
    'authority_type' => 'Local Authority',
    'nation' => 'USA',
    'ons_code' => '123456',
    'field_person' => [
      $authority_person_8->id(),
      $authority_person_2->id(),
    ],
    'field_regulatory_function' => [
      $regulatory_function_2->id(),
    ],
    'field_premises' => [
      $premises_4->id(),
    ],
  ]);
  $authority_2->save();

  // The main Partnership.
  $partnership = \Drupal\par_data\Entity\ParDataPartnership::create([
    'type' => 'partnership',
    'name' => 'Partnership Lower East Side and Charlie\'s',
    'uid' => 1,
    'partnership_type' => 'Direct Partnership',
    'partnership_status' => 'Approved',
    'about_partnership' => 'This is a partnership between Lower East Side and Charlie\'s Cafe on Sesame Street.',
    'communication_email' => TRUE,
    'communication_phone' => TRUE,
    'communication_notes' => '',
    'approved_date' => '2017-06-15',
    'expertise_details' => '',
    'cost_recovery' => 'Cost recovered by Jo Smith',
    'reject_comment' => '',
    'revocation_source' => 'An RD Executive called Sue',
    'revocation_date' => '2017-07-01',
    'revocation_reason' => 'I saw a rat in Charlie\'s Cafe.',
    'authority_change_comment' => '',
    'organisation_change_comment' => '',
    'field_authority' => [
      $authority_1->id(),
    ],
    'field_organisation' => [
      $organisation_1->id(),
    ],
    'field_authority_person' => [
      $authority_person_1->id(),
      $authority_person_2->id(),
      $authority_person_8->id(),
    ],
    'field_organisation_person' => [
      $business_person_3->id(),
      $business_person_4->id(),
      $business_person_7->id(),
    ],
    'field_regulatory_function' => [
      $regulatory_function_1->id(),
    ],
    'field_advice' => [
      $advice_1->id(),
    ],
    'field_inspection_plan' => [
      $inspection_plan_1->id(),
    ]
  ]);
  $partnership->save();
}
