<?php

namespace Drupal\par_member_update_flows\Form;

use Drupal\Core\Form\FormStateInterface;
use Drupal\par_data\Entity\ParDataLegalEntity;
use Drupal\par_flows\Form\ParBaseForm;
use Drupal\par_forms\ParFormBuilder;
use Drupal\par_member_update_flows\ParFlowAccessTrait;

/**
 * Add legal entities to members.
 */
class ParLegalEntityForm extends ParBaseForm {

  use ParFlowAccessTrait;

  /**
   * Set the page title.
   */
  protected $pageTitle = 'Add legal entities';

  /**
   * {@inheritdoc}
   */
  public function loadData() {
    $par_data_coordinated_business = $this->getFlowDataHandler()->getParameter('par_data_coordinated_business');
    $par_data_organisation = $par_data_coordinated_business->getOrganisation(TRUE);
    $this->getFlowDataHandler()->setParameter('par_data_organisation', $par_data_organisation);
    parent::loadData();
  }

  public function submitForm(array &$form, FormStateInterface $form_state) {
    parent::submitForm($form, $form_state); // TODO: Change the autogenerated stub

    $par_data_organisation = $this->getFlowDataHandler()->getParameter('par_data_organisation');

    $legal_entities = $this->getFlowDataHandler()->getTempDataValue('registered_number') ?: [];
    kint($legal_entities);
    die();

//    $par_data_legal_entity = ParDataLegalEntity::create([
//      'registered_name' => '123',
//      'registered_number' => '456',
//      'legal_entity_type' => 'partnership',
//    ]);
//
//    $par_data_legal_entity->save();
//
//    $par_data_organisation->get('field_legal_entity')->appendItem($par_data_legal_entity);
//    $par_data_organisation->save();

  }

}
