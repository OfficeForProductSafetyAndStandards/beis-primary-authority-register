<?php


/**
 * @file
 * Functions to support theming in the GOV.UK theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Site\Settings;
use Drupal\block\Entity\Block;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_theme().
 */
function govuk_par_theme() {
  $phase_banner_message = theme_get_setting('phase_banner_message');
  $config = \Drupal::config('system.site');
  return [
    'govuk_par_phase_banner' => [
      'variables' => [
        'phase' => theme_get_setting('govuk_par_phase_banner'),
        'message' => [
          '#markup' => $phase_banner_message['value'],
          '#allowed_tags' => ['a'],
        ],
      ],
      'template' => 'components/phase-banner',
    ],
    'govuk_par_search' => [
      'variables' => [
        'site_name' => $config->get('name'),
        'site_slogan' => $config->get('slogan'),
      ],
      'template' => 'components/search',
    ],
    'govuk_par_cookie' => [
      'variables' => [
        'title' => "Cookies for {$config->get('name')}",
        'cookie_name' => _govuk_par_theme_get_setting('govuk_par_cookie_name'),
        'cookie_policy' => array_filter(_govuk_par_theme_get_setting('govuk_par_cookie_policy')),
        'cookie' => NULL,
      ],
      'template' => 'components/cookie',
    ],
    'govuk_par_header' => [
      'variables' => [
        'site_name' => $config->get('name'),
        'site_slogan' => $config->get('slogan'),
      ],
      'template' => 'components/header'
    ],
    'govuk_par_footer' => [
      'variables' => [
        'govuk_par_team' => _govuk_par_theme_get_setting('govuk_par_team'),
        'govuk_par_team_link' => _govuk_par_theme_get_setting('govuk_par_team_link'),
      ],
      'template' => 'components/footer'
    ],
    'govuk_par_meta' => [
      'variables' => [],
      'template' => 'components/meta'
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function govuk_par_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  $elements_to_vary_by_type = [
    'form_element',
  ];

  // Add theme suggestions for form_element__type.
  if (in_array($hook, $elements_to_vary_by_type) && isset($variables['element']['#type'])) {
    $suggestions[] = $hook . '__' . $variables['element']['#type'];
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function govuk_par_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  switch ($route_name) {
    case 'system.401':
      // Unauthorized Access.
      $error = 401;
      break;

    case 'system.403':
      // Access Denied.
      $error = 403;
      break;

    case 'system.404':
      // Page Not Found.
      $error = 404;
      break;
  }
  if (isset($error)) {
    $suggestions[] = 'page__' . $error;
  }
}


/**
 * Implements hook_theme_suggestions_menu_alter().
 */
function govuk_par_theme_suggestions_menu_alter(&$suggestions, array $variables) {
  if (isset($variables['attributes']['region'])) {
    $suggestion = 'menu__region__' . $variables['attributes']['region'];
    $suggestions[] = str_replace('-', '_', $suggestion);
    $suggestion = 'menu__region__' . $variables['attributes']['region'] . '__' . $variables['menu_name'];
    $suggestions[] = str_replace('-', '_', $suggestion);
  }
}


/**
 * Implements hook_preprocess_html().
 *
 * @param array $variables
 */
function govuk_par_preprocess_html(&$variables) {
  // Set the page title
  $config = \Drupal::config('system.site');
  $title = explode(' | ', $variables['head_title']['title'] );
  $variables['head_title']['title'] = $title[0] . ' | ' . $config->get('name') . ' ' . $config->get('slogan');
}

/**
 * Implements hook_preprocess_page().
 *
 * @param array $variables
 */
function govuk_par_preprocess_page(array &$variables) {
  $config = \Drupal::config('system.site');
  $request = \Drupal::request();
  $variables['site_name'] = $config->get('name');
  $variables['site_slogan'] = $config->get('slogan');
  if (theme_get_setting('govuk_par_breadcrumb') && !$variables['is_front']) {
    $variables['show_breadcrumb'] = TRUE;
  }

  if (theme_get_setting('govuk_par_phase_banner')) {
    $variables['govuk_par_phase_banner'] = ['#theme' => 'govuk_par_phase_banner'];
  }

  if (theme_get_setting('govuk_par_cookie')) {
    if ($request->cookies->get(_govuk_par_theme_get_setting('govuk_par_cookie_name'))) {
      $cookie = JSON::decode($request->cookies->get(_govuk_par_theme_get_setting('govuk_par_cookie_name')));
    }
    else {
      $cookie = '';
    }
    $variables['govuk_par_cookie'] = [
      '#theme' => 'govuk_par_cookie',
      '#cookie' => $cookie,
      '#cache' => [
        'contexts' => [
          'user',
          'cookies:' . _govuk_par_theme_get_setting('govuk_par_cookie_name'),
        ],
      ],
    ];
  }

  $variables['govuk_par_header'] = ['#theme' => 'govuk_par_header'];
  $variables['govuk_par_footer'] = ['#theme' => 'govuk_par_footer'];
  $variables['govuk_par_meta'] = ['#theme' => 'govuk_par_meta'];

  if (theme_get_setting('search_box')) {
    $variables['search_box'] = ['#theme' => 'govuk_par_search'];
  }
}

/**
 * Implements hook_preprocess_block().
 */
function govuk_par_preprocess_block(&$variables) {
  if (isset($variables['base_plugin_id']) && isset($variables['elements']['#id'])
    && $variables['base_plugin_id'] === 'system_menu_block') {
    $region = Block::load($variables['elements']['#id'])->getRegion();
    $variables['content']['#attributes']['region'] = $region;
  }
}


/**
 * Implements hook_preprocess_region().
 */
function govuk_par_preprocess_region(&$variables) {
  if (isset($variables['region']) && $variables['region'] === 'cookies') {
    $site_name = \Drupal::config('system.site')->get('name');
    $variables['attributes']['aria-label'] = "Cookies for $site_name";
  }
}


/**
 * Implements hook_preprocess_menu().
 *
 * @param array $variables
 * @param string $hook
 */
function govuk_par_preprocess_menu(&$variables, $hook) {
  if ($hook == 'menu') {
    $current_path = \Drupal::request()->getRequestUri();
    $items = $variables['items'];
    foreach ($items as $key => $item) {
      if ($item['url']->toString() == $current_path) {
        $variables['items'][$key]['in_active_trail'] = TRUE;
      } else {
        $url_fragments = explode('/', $current_path);
        if (count($url_fragments) > 1 && '/' . $url_fragments[1] == $item['url']->toString()) {
          $variables['items'][$key]['in_active_trail'] = TRUE;
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_menu_local_task()
 *
 * @param $variables
 */
function govuk_par_preprocess_menu_local_task(&$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'govuk-tabs__tab';
}

/**
 * Implements hook_preprocess_fieldset().
 *
 * @param array $variables
 */
function govuk_par_preprocess_fieldset(array &$variables) {

  $variables['child_count'] = isset($variables['element']['#options']) ?
    count($variables['element']['#options']) : 0;

  // Get the form element.
  $element = &$variables['element'];

  // Pass elements disabled status to template.
  $variables['disabled'] = !empty($element['#attributes']['disabled']) ?
    $element['#attributes']['disabled'] : NULL;

  // Initiate errors.
  $variables['errors'] = NULL;

  // Make {{ errors }} available in template file.
  if (!empty($element['#errors']) && empty($element['#error_use_parent'])) {
    $variables['errors'] = $element['#errors'];
  }

}

/**
 * Implements hook_preprocess_textarea().
 *
 * @param array $variables
 */
function govuk_par_preprocess_textarea(array &$variables) {
  if (isset($variables['element']['#counter_type'])) {
    $variables['counter'] = $variables['element']['#counter_maximum'];
  }
}

/**
 * Implements hook_preprocess_form_element().
 *
 * @param array $variables
 */
function govuk_par_preprocess_form_element(array &$variables) {

  // Get the form element.
  $element = &$variables['element'];

  // Pass elements disabled status to template.
  $variables['disabled'] = !empty($element['#attributes']['disabled']) ?
    $element['#attributes']['disabled'] : NULL;

  // Initiate errors.
  $variables['errors'] = NULL;

  // Make {{ errors }} available in template file.
  if (!empty($element['#errors']) && empty($element['#error_use_parent'])) {
    $variables['errors'] = $element['#errors'];
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function govuk_par_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['name']) && isset($form['name']['#required']) && $form['name']['#required'] === TRUE) {
    $form['name']['#required'] = FALSE;
  }

  if (isset($form['pass']) && isset($form['pass']['#required']) && $form['pass']['#required'] === TRUE) {
    $form['pass']['#required'] = FALSE;
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function govuk_par_form_user_pass_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['name']) && isset($form['name']['#required']) && $form['name']['#required'] === TRUE) {
    $form['name']['#required'] = FALSE;
  }
}

function govuk_par_form_system_theme_settings_alter(&$form, FormStateInterface &$form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }
  $form['banners'] = array(
    '#type' => 'details',
    '#title' => t('GOV.UK Elements'),
    '#open' => TRUE,
    '#weight' => -50,
  );
  $form['banners']['search_box'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show the Search on your site.'),
    '#default_value' => theme_get_setting('search_box'),
  );
  $form['banners']['govuk_par_cookie'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show the Cookie banner on your site.'),
    '#default_value' => theme_get_setting('govuk_par_cookie'),
  );
  $form['banners']['cookies'] = [
    '#type' => 'container',
    '#states' => [
      'visible' => [
        ':input[name="govuk_par_cookie"]' => [
          'checked' => TRUE,
        ],
      ],
    ],
  ];
  $form['banners']['cookies']['govuk_par_cookie_name'] = array(
    '#type' => 'textfield',
    '#title' => t('The cookie name to set.'),
    '#default_value' => _govuk_par_theme_get_setting('govuk_par_cookie_name'),
  );
  $form['banners']['cookies']['govuk_par_cookie_policy'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Which cookies does this site set?'),
    '#options' => ['analytics' => 'Analytics', 'functional' => 'Functional', 'other' => 'Other'],
    '#default_value' => _govuk_par_theme_get_setting('govuk_par_cookie_policy'),
  );
  $form['banners']['govuk_par_breadcrumb'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show the breadcrumb on your site'),
    '#default_value' => theme_get_setting('govuk_par_breadcrumb'),
    '#description' => t('Show a trail of links from the homepage to the current page.'),
  );
  $phase_banner_url = Url::fromUri('https://design-system.service.gov.uk/components/phase-banner/');
  $phase_banner_link = Link::fromTextAndUrl(t('phase banner'), $phase_banner_url);
  $form['banners']['govuk_par_phase_banner'] = [
    '#type' => 'select',
    '#title' => t('Phase banner'),
    '#default_value' => theme_get_setting('govuk_par_phase_banner'),
    '#options' => [
      'demo' => t('Demo'),
      'alpha' => t('Alpha'),
      'beta' => t('Beta'),
    ],
    '#empty_option' => t('None'),
    '#description' => t('Select a @phase_banner to be displayed on your site.', ['@phase_banner' => $phase_banner_link->toString()]),
  ];

  // Workaround for https://www.drupal.org/node/997826
  $form['banners']['phase_banner_message_container'] = [
    '#type' => 'container',
    '#states' => [
      'visible' => [
        ':input[name="govuk_par_phase_banner"]' => [
          ['value' => 'demo'],
          ['value' => 'alpha'],
          ['value' => 'beta'],
        ],
      ],
    ],
  ];

  $setting = theme_get_setting('phase_banner_message');
  $form['banners']['phase_banner_message_container']['phase_banner_message'] = [
    '#type' => 'text_format',
    '#title' => t('Phase banner message'),
    '#format' => $setting['format'],
    '#default_value' => $setting['value'],
  ];

  $form['banners']['govuk_par_team'] = array(
    '#type' => 'textfield',
    '#title' => t('The name of the owning department'),
    '#default_value' => theme_get_setting('govuk_par_team'),
  );
  $form['banners']['govuk_par_team_link'] = array(
    '#type' => 'textfield',
    '#title' => t('The URL of the owning department.'),
    '#default_value' => theme_get_setting('govuk_par_team_link'),
  );
}

function _govuk_par_theme_get_setting($name, $default = NULL) {
  switch ($name) {
    case 'govuk_par_cookie_name':
      $default = '_cookie_policy';
      break;

    case 'govuk_par_cookie_policy':
      $default = ['analytics', 'functional', 'other'];
      break;

  }
  return theme_get_setting($name) ?? $default;
}

/**
 * Implements hook_form_alter().
 */
function govuk_par_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['#attributes']['novalidate'] = 'novalidate';
  if (strpos($form_id, 'webform') !== FALSE) {
    $form['#attached']['library'][] = 'govuk_par/webform';
  }
}

/**
 * Implements hook_preprocess().
 */
function govuk_par_preprocess(&$variables) {
  $handler = \Drupal::service('theme_handler');
  $variables['govuk_par_directory'] = base_path() . $handler->getTheme('govuk_par')->getPath();
}


