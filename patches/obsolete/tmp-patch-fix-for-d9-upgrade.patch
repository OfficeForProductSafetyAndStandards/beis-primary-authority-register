diff --git a/src/Plugin/views/field/RoleDelegationUserBulkForm.php b/src/Plugin/views/field/RoleDelegationUserBulkForm.php
index c4ee9b6..00a3141 100644
--- a/src/Plugin/views/field/RoleDelegationUserBulkForm.php
+++ b/src/Plugin/views/field/RoleDelegationUserBulkForm.php
@@ -20,7 +20,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class RoleDelegationUserBulkForm extends UserBulkForm {
 
   /**
-   * The currently logged in user.
+   * The currently logged in user.init
    *
    * @var \Drupal\Core\Session\AccountInterface
    */
@@ -51,33 +51,4 @@ class RoleDelegationUserBulkForm extends UserBulkForm {
     );
   }
 
-  /**
-   * {@inheritdoc}
-   */
-  public function init(ViewExecutable $view, DisplayPluginBase $display, array &$options = NULL) {
-    parent::init($view, $display, $options);
-
-    $entity_type = $this->getEntityType();
-    // Filter the actions to only include those for this entity type.
-    /** @var \Drupal\system\ActionConfigEntityInterface[] $actions */
-    $actions = $this->actionStorage->loadMultiple();
-    $this->actions = array_filter($actions, function ($action) use ($entity_type) {
-      $plugin_definition = $action->getPluginDefinition();
-
-      if ('user' === $action->getType() && in_array($plugin_definition['id'], [
-        'user_add_role_action',
-        'user_remove_role_action',
-      ])) {
-        $collections = $action->getPluginCollections();
-        $collection = reset($collections);
-        $configuration = $collection->getConfiguration();
-
-        return $this->currentUser->hasPermission('assign all roles') || $this->currentUser->hasPermission(sprintf('assign %s role', $configuration['rid']));
-      }
-      else {
-        return $action->getType() == $entity_type;
-      }
-    });
-  }
-
 }
