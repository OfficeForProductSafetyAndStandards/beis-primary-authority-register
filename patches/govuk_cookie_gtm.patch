diff --git a/src/Form/AdminSettingsForm.php b/src/Form/AdminSettingsForm.php
index 09da52a..7ee0e14 100644
--- a/src/Form/AdminSettingsForm.php
+++ b/src/Form/AdminSettingsForm.php
@@ -85,9 +85,10 @@ class AdminSettingsForm extends ConfigFormBase {
       '#title' => $this->t('Cookie types'),
       '#description' => $this->t('List any non-essential cookies used by this site.'),
       '#options' => [
-        'analytics' => 'Analytics',
-        'functional' => 'Functional',
-        'other' => 'Other'],
+        'usage' => 'Usage',
+        'campaigns' => 'Campaigns',
+        'other' => 'Other',
+      ],
       '#required' => TRUE,
       '#default_value' => $config->get('types') ?? [],
     ];
diff --git a/src/Form/CookieConsentForm.php b/src/Form/CookieConsentForm.php
index 00fc62d..e24b8a9 100644
--- a/src/Form/CookieConsentForm.php
+++ b/src/Form/CookieConsentForm.php
@@ -92,14 +92,6 @@ class CookieConsentForm extends FormBase {
    * {@inheritDoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, $list = NULL, $subscription_status = NULL) {
-    if ($this->getRequest()->cookies->has($this->getCookieName())) {
-      $cookie = $this->getRequest()->cookies->get($this->getCookieName());
-      $cookie_policy = Json::decode($cookie);
-    }
-    else {
-      // Set default values if cookie policy is not set.
-      $cookie_policy = $this->getCookieTypes();
-    }

     foreach ($this->getCookieTypes() as $type) {
       $options = [
@@ -110,9 +102,7 @@ class CookieConsentForm extends FormBase {
         '#type' => 'radios',
         '#title' => "Do you want to accept $type cookies?",
         '#options' => $options,
-        '#default_value' => array_search($type, $cookie_policy) !== false ?
-          self::ALLOW_VALUE :
-          self::BLOCK_VALUE,
+        '#required' => TRUE,
       ];
     }

@@ -140,7 +130,7 @@ class CookieConsentForm extends FormBase {
     // Add flood protection for unauthenticated users.
     $fid = implode(':', [$this->getRequest()->getClientIP(), $this->currentUser()->id()]);
     if ($this->currentUser()->isAnonymous() &&
-      !$this->flood->isAllowed("govuk_cookies.{$this->getFormId()}", 10, 3600, $fid)) {
+      !$this->flood->isAllowed("govuk_cookies.{$this->getFormId()}", 1000, 3600, $fid)) {
       $form_state->setErrorByName('text', $this->t(
         'Too many form submissions from your location.
         This IP address is temporarily blocked. Please try again later.'
@@ -160,7 +150,7 @@ class CookieConsentForm extends FormBase {
     $cookie_policy = [];
     foreach ($this->getCookieTypes() as $type) {
       if ($form_state->getValue($type) === self::ALLOW_VALUE) {
-        $cookie_policy[] = $type;
+        $cookie_policy[] = '"'. $type . '":true';
       }
     }

@@ -169,10 +159,10 @@ class CookieConsentForm extends FormBase {
     // Set the new cookie policy.
     $response->headers->setCookie(new Cookie(
       $this->getCookieName(),
-      Json::encode($cookie_policy),
+      '{' . implode(",", $cookie_policy) .'}',
       \Drupal::time()->getRequestTime() + 31536000,
       '/',
-      ".{$this->getRequest()->getHost()}",
+      "",
       false,
       false,
       true,
diff --git a/src/Plugin/Block/CookieBannerBlock.php b/src/Plugin/Block/CookieBannerBlock.php
index 9b2c50e..0de64d3 100644
--- a/src/Plugin/Block/CookieBannerBlock.php
+++ b/src/Plugin/Block/CookieBannerBlock.php
@@ -2,14 +2,9 @@

 namespace Drupal\govuk_cookies\Plugin\Block;

-use Drupal\Component\Serialization\Json;
-use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Block\BlockBase;
-use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Form\FormBuilderInterface;
-use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
-use Drupal\Core\Session\AccountInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;

 /**
@@ -81,6 +76,15 @@ class CookieBannerBlock extends BlockBase implements ContainerFactoryPluginInter
     return \Drupal::config('govuk_cookies.settings')->get('types');
   }

+  /**
+   * {@inheritdoc}
+   */
+  protected function setCookieTypes() {
+    foreach ($this->getCookieTypes() as $type) {
+      return $type . ': true';
+    }
+  }
+
   /**
    * Returns generic default configuration for block plugins.
    *
@@ -118,7 +122,7 @@ class CookieBannerBlock extends BlockBase implements ContainerFactoryPluginInter
       ],
       '#attached' => [
         'library' => [
-          'govuk_cookies/banner'
+          'govuk_cookies/banner',
         ],
         'drupalSettings' => [
           'govuk_cookies' => [
@@ -129,10 +133,10 @@ class CookieBannerBlock extends BlockBase implements ContainerFactoryPluginInter
                 'expires' => \Drupal::time()->getRequestTime() + 31536000,
                 'path' => '/',
                 'domain' => ".{$this->getRequest()->getHost()}",
-                'secure' => false,
+                'secure' => FALSE,
                 'samesite' => 'strict',
-                'raw' => true,
-              ]
+                'raw' => TRUE,
+              ],
             ],
           ],
         ],
@@ -145,11 +149,11 @@ class CookieBannerBlock extends BlockBase implements ContainerFactoryPluginInter
         '#theme' => 'govuk_cookie_message',
       ];

-      // @TODO Replace with configurable cookie types.
-      $cookie_types = ['analytics', 'functional', 'other'];
-      $type = ($cookie_types && count($cookie_types) === 1 && current($cookie_types) === 'analytics') ?
-        'analytics' :
-        'additional';
+      // @todo Replace with configurable cookie types.
+      $cookie_types = ['usage', 'campaigns', 'other'];
+      $type = ($cookie_types && count($cookie_types) === 1 && current($cookie_types) === 'usage') ?
+        'usage' :
+        'campaigns';

       // Only display additional messages if non-essential cookies are being set.
       if (!empty($cookie_types)) {
@@ -166,8 +170,7 @@ class CookieBannerBlock extends BlockBase implements ContainerFactoryPluginInter
             '#type' => 'html_tag',
             '#tag' => 'p',
             '#value' => $this->t(
-              'You’ve accepted @type cookies. You can <a href="/cookies">change your cookie settings</a> at any time.',
-              ['@type' => $type]
+              'You’ve accepted cookies. You can <a href="/cookies">change your cookie settings</a> at any time.'
             ),
           ],
           '#cookie_policy' => NULL,
@@ -186,8 +189,7 @@ class CookieBannerBlock extends BlockBase implements ContainerFactoryPluginInter
             '#type' => 'html_tag',
             '#tag' => 'p',
             '#value' => $this->t(
-              'You’ve rejected @type cookies. You can <a href="/cookies">change your cookie settings</a> at any time.',
-              ['@type' => $type]
+              'You’ve rejected cookies. You can <a href="/cookies">change your cookie settings</a> at any time.'
             ),
           ],
           '#cookie_policy' => NULL,
