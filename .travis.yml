##############################################################################
### BUILD                                                                  ###
##############################################################################

language: php

php:
  - 7.1
  
services:
  - docker
  
cache:
  directories:
    - node_modules
    - tests/node_modules
    - $HOME/.composer/cache/files
    
install:

#-----------------------------------------------------------------------------
# Install Cloud Foundry CLI, for deployment, if on master branch
#-----------------------------------------------------------------------------
  
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_TAG != '' ]]; then wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -; fi
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_TAG != '' ]]; then echo "deb http://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list; fi
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_TAG != '' ]]; then sudo apt-get update; fi
  - if [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_TAG != '' ]]; then sudo apt-get install cf-cli; fi
  
#-----------------------------------------------------------------------------
# Bring up Docker containers
#-----------------------------------------------------------------------------
  
  - cd docker
  - docker-compose up -d
  - cd ..

#-----------------------------------------------------------------------------
# Install dependencies
#-----------------------------------------------------------------------------
  
  - phpenv config-rm xdebug.ini
  - composer install -v  
  - docker exec -it par_beta_web bash -c "/usr/local/n/versions/node/7.2.1/bin/npm install"
  - docker exec -it par_beta_web bash -c "npm run gulp"
  - docker exec -it par_beta_web bash -c "cd /var/www/html/tests && /usr/local/n/versions/node/7.2.1/bin/npm install"
  
#-----------------------------------------------------------------------------
# Setup local config defaults
#-----------------------------------------------------------------------------
  
  - cp web/sites/example.settings.local.php web/sites/default/settings.local.php
  
#-----------------------------------------------------------------------------
# Create .env file
#-----------------------------------------------------------------------------
  
  - echo "S3_BUCKET_ARTIFACTS=$S3_BUCKET_ARTIFACTS" > .env
  - echo "S3_ACCESS_KEY=$S3_ACCESS_KEY" >> .env
  - echo "S3_SECRET_KEY=$S3_SECRET_KEY" >> .env
  - echo "PAR_HASH_SALT=$PAR_HASH_SALT" >> .env
  - echo "DATAFILE=$DATAFILE" >> .env
  - echo "APP_ENV=travis" >> .env
  - cat .env
  
#-----------------------------------------------------------------------------
# Import dev data from S3
#-----------------------------------------------------------------------------

  - sleep 5
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush sql-cli @dev < ../docker/fresh_drupal_postgres.sql"
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush cc drush"
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush cr"
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush fsg s3backups $DATAFILE.tar.gz /dump.sql.tar.gz"
  - docker exec -i par_beta_web bash -c "cd / && tar --no-same-owner -zxvf dump.sql.tar.gz"
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush sql-cli @dev < /$DATAFILE"
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush sqlsan @dev -y"
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush cc drush"
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush cr"
  
#-----------------------------------------------------------------------------
# Run further Drush commands
#-----------------------------------------------------------------------------
  
  - docker exec -i par_beta_web sh /var/www/html/drupal-update.sh /var/www/html
  - docker exec -i par_beta_web bash -c "cd web && ../vendor/bin/drush cex -n 1> /dev/null"

#-----------------------------------------------------------------------------
# Stamp the code with the build number
#-----------------------------------------------------------------------------

  - 'echo "#${TRAVIS_BUILD_NUMBER} ${TRAVIS_TAG}: $(date -u)" > web/build_version.txt'
  
##############################################################################
### TEST                                                                   ###
##############################################################################

script:
  - travis_retry docker exec -i par_beta_web /var/www/html/vendor/phpunit/phpunit/phpunit
  - travis_retry docker exec -ti par_beta_web bash -c "cd tests && ./node_modules/.bin/wdio wdio.BUILD.conf.js"
  - travis_retry docker exec -ti par_beta_web bash -c "cd tests && ./node_modules/.bin/pa11y-ci -T 1 -j -s 'http://localhost/sitemap.xml' -f 'https://par-beta-test.cloudapps.digital' -r 'http://localhost:80' > ./reports/wcag2aa_report.json"
  
#-----------------------------------------------------------------------------
# Remove .env file created in previous steps.
# If tagged build, tar up the files ready for S3.
#-----------------------------------------------------------------------------
  
  - rm .env
  - if [[ $TRAVIS_TAG != '' ]]; then tar zcf $TRAVIS_TAG.tar.gz *; fi
  - if [[ $TRAVIS_TAG != '' ]]; then mkdir $TRAVIS_TAG; fi
  - if [[ $TRAVIS_TAG != '' ]]; then mv $TRAVIS_TAG.tar.gz $TRAVIS_TAG; fi

##############################################################################
### DEPLOY                                                                 ###
##############################################################################

deploy:
#-----------------------------------------------------------------------------
# Master branch deploys to "dev test" environment
#-----------------------------------------------------------------------------
  
  - provider: cloudfoundry
    api: https://api.cloud.service.gov.uk
    username: nao.yoshino@transformuk.com
    manifest: manifest.continuous.yml
    password:
      secure: fh6ePSKsJUnXEeZVwUU4gwGxIwLAfaug6O+4Zs0Wmus5dYXuRgVXQ3RLP1rSyp4Hc6/Nt4CPt3A8ygFW5WGNRKNXXR3F47wXLGnixOKCDmLCz6VytUXesEXlqDkzXSBT7WZGqOTKdTLKJOhaV4Z9Oum/CL5QckKbHlBHinhL3IpH4zi+4tBERc1C6R6oRC9ZPiEsFr9FYOE0hqvFA8Vw0SkB5C3uyQaFh0WotNLkhdd4fUUotxzjA5Cr2KAUTaUcRw0Ceq90UPlWnwBJDxjaNokuEcO6S13HDXTTi/RXNZi4oRhePokbs6z01GssOSiVencbRHX+RT7a4jHwF0hZI9OMgXelnmYb4Jdq5FeVPBD9OenIXGCAo2nyxJ/EU+7InUlQAN6HDh5QO7B10aSJpaWfNt2X65+FeOP89rbLPyfisqxFtbGZW1/ur9VlXOt0c8h9f6vdled8pocT6sMO6duKhMM5xFhRyDBVv01ZCZxTXOGTgOPRUN9EsVsrxX2X8mtRMmr0hJ+vml4eb1I/3AEJX10SDi4e/S8i8mJ4oAaVK4kAR7oLnKT+feBbKqHha/xkU87kp49jm3k65FzkwJzGUNe5GStjEvXXWvK8EaSX2t42iFU4SgbsMi/BIsAyy2NMyB8ua9SziYG7JGwv5z+brl7QJrvniYzkom3JSso=
    organization: beis-nmo-trial
    space: sandbox
    on:
      repo: TransformCore/beis-par-beta
      
#-----------------------------------------------------------------------------
# Tagged master branch deploys to "demo" environment
#-----------------------------------------------------------------------------
      
  - provider: s3
    access_key_id: $S3_ACCESS_KEY
    secret_access_key: $S3_SECRET_KEY
    bucket: "transform-par-beta-artifacts"
    upload-dir: travis-builds
    skip_cleanup: true
    local_dir: $TRAVIS_TAG
    on:
      repo: TransformCore/beis-par-beta
      tags: true      

##############################################################################
### POST DEPLOY                                                            ###
##############################################################################

after_deploy:
  - cf login -a api.cloud.service.gov.uk -u nao.yoshino@transformuk.com -p $CF_PASSWORD
  - PAAS_APP_INSTANCE="par-beta-continuous";
  
#-----------------------------------------------------------------------------
# Set environment variables on PaaS instance
#-----------------------------------------------------------------------------
   
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE S3_ACCESS_KEY $S3_ACCESS_KEY; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE S3_SECRET_KEY $S3_SECRET_KEY; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE S3_BUCKET_PUBLIC $S3_BUCKET_PUBLIC; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE S3_BUCKET_PRIVATE $S3_BUCKET_PRIVATE; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE S3_BUCKET_ARTIFACTS $S3_BUCKET_ARTIFACTS; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE PAR_HASH_SALT $PAR_HASH_SALT; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE PAR_GOVUK_NOTIFY_KEY $PAR_GOVUK_NOTIFY_KEY; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE PAR_GOVUK_NOTIFY_TEMPLATE $PAR_GOVUK_NOTIFY_TEMPLATE; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf set-env $PAAS_APP_INSTANCE APP_ENV $APP_ENV; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf restage $PAAS_APP_INSTANCE; fi
  
#-----------------------------------------------------------------------------
# Publish test reports
#-----------------------------------------------------------------------------
    
  - cd tests/reports/html && cf push -f ../../reports-manifest.yml
  
#-----------------------------------------------------------------------------
# Update Drupal, sync config, etc...
#-----------------------------------------------------------------------------
    
  - if [[ $TRAVIS_TAG == '' ]]; then cf ssh $PAAS_APP_INSTANCE -c "cd app/tools && python extract_postgres_env_vars.py"; fi
  - if [[ $TRAVIS_TAG == '' ]]; then cf ssh $PAAS_APP_INSTANCE -c "cd app && source drupal-update-paas-envs.sh && sh drupal-update-paas.sh"; fi

##############################################################################
### STORE ARTIFACTS                                                        ###
##############################################################################

addons:
  artifacts:
    debug: false
    paths:
      - ./tests/reports
    target_paths: tests/$TRAVIS_BUILD_NUMBER
    bucket: transform-par-beta-artifacts
    s3_region: eu-west-1

notifications:
  slack:
    secure: oRuAo84heWUp6MVcM22dx/FZUV5HUVvsegEDaiVggQmNo2zYzNQhgAY7P9GpnaPWo53inCoFfwrwn9V+sj2uwUwrtWQg71qCTU3FIZicqYBB44rp+7/YdpuNqCYtbbY50UJpsZtqRIffWB4iS0YZ2bd+SkvsJskzRzbHC9qRjrSq0Hmb1DuxQCiE+M9TM7n4phY1dPTxTm1g1WwShr1zKXTfhDDK2k9r9kQGpJFP5rrE5cch0kBPJP29rgijeJq5uFS99+QyiVRJcqStXYl2JvKXTMS3sVk+OgSHeeRaaY0dbQSPcn4mTgcQKMVpfAUXVD6mUlkj4WYDXjdQSZdbgVvsX5tQg/6kG52wXgB+vDsmwKoBcTZLndNUQc9nCA02A+WVLyru318JmxwtaLo7CqRJArG3vItryMl7SxUA5QM1XB77iOe25m1aXEvJkUa54p6P7T62Gr0qfaEnCAeNRu33nS/16g+Znbp34jIwmmt+f3q2Uo3XV9cQgYj46ixzSjw5OPTHQSEpCHE8jtkXP80/N8jlXYLm7kTJapSWKEdbQf6J5a7Oj8Hv7Jq0QoPZmRpfa9L5PwJHd38p1JmxnVFbZMS4dQGyTwgyehf62cIDVi+5Pl3XPdQJ9FcMSTGOCXSrPGmJRHBt+o8bOuIzWMBHYqgnmHNNQ+oK/SEFhyw=
